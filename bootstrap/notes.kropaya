※ This is a comment

※ All definitions define for the rest of the scope, plus enclosed scopes

※ Variable definitions:

%let f = 3.

%let μy.
  y: Int.
  y = 3.
%end.

%let μa b.
  a = 3
  c = "zog" + (text b)
  b = a + 1
%end

※ Type definitions:

%let maybe = ∃a. <&some: a, &none>.

%let list = ∃y. μx. <&end, &cons: {&car: y, &cdr: x}>

%let shape = μshape. <&chunk: shape, &length: Int>.

※ Module definitions

%let array = ∃the-shape type. μarray. ıget set lengths.
  get: Int → array shape type → maybe type.
  get index the-array = %edge magic-array-get.

  set: Int → array shape type → type → either Text type.
  set index the-array the-value = %edge magic-array-set.

  lengths: array shape type → shape.
  lengths _ = the-shape.
%end
